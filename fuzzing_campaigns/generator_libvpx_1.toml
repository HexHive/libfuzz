[analysis]
apis_llvm = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/apipass/apis_llvm.json"
apis_clang = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/apipass/apis_clang.json"
coercemap = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/apipass/coerce.log"
headers = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/apipass/exported_functions.txt"
incomplete_types = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/apipass/incomplete_types.txt"
conditions = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/apipass/conditions.json"
minimum_apis = ""
data_layout = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/apipass/data_layout.txt"
enum_types = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/apipass/enum_types.txt"
weights = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/apipass/weights.json"

[generator]
workdir = "/workspace/libfuzz/main/fuzzing_campaigns/workdir_X_X/libvpx/iter_1"
policy = "constraint_based_grammar"
dep_graph = "type"
pool_size = 1
driver_size = 10
num_unknown_api = 0
num_seeds = 1
backend = "libfuzz"
bias = "none"

[backend]
headers = "/workspace/libfuzz/main/fuzzing_campaigns/../analysis/libvpx/work/include"
public_headers = "/workspace/libfuzz/main/fuzzing_campaigns/../targets/libvpx/public_headers.txt"

