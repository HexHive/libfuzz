libhtp: {'htp_config_set_path_separators_encoded_unwanted', 'htp_config_register_multipart_parser', 'htp_config_get_user_data', 'bstr_adjust_size', 'htp_list_array_shift', 'htp_table_get_mem', 'htp_mpartp_get_multipart', 'htp_config_set_user_data', 'htp_config_set_u_encoding_unwanted', 'htp_config_set_server_personality', 'htp_list_array_clear', 'bstr_builder_append_mem', 'bstr_builder_to_str', 'bstr_begins_with_nocase', 'htp_base64_decode_single', 'htp_config_set_control_chars_unwanted', 'htp_table_add', 'bstr_chop', 'htp_config_register_request_line', 'htp_tx_destroy', 'htp_base64_decode_mem', 'bstr_begins_with_mem', 'htp_table_clear_ex', 'htp_config_set_max_tx', 'htp_config_register_request_trailer_data', 'htp_config_set_response_decompression', 'bstr_dup_mem', 'bstr_builder_destroy', 'htp_config_set_path_separators_decode', 'bstr_cmp_c_nocasenorzero', 'htp_config_set_nul_encoded_unwanted', 'htp_list_array_push', 'bstr_index_of_c', 'htp_config_set_extract_request_files', 'htp_config_register_response_body_data', 'bstr_char_at', 'htp_config_register_request_header_data', 'bstr_index_of', 'bstr_util_mem_index_of_c', 'bstr_dup_lower', 'bstr_add_c', 'htp_config_set_bestfit_map', 'htp_mpartp_destroy', 'htp_config_set_parse_request_cookies', 'bstr_wrap_c', 'htp_config_set_convert_lowercase', 'htp_hook_run_all', 'htp_config_register_response_trailer', 'htp_config_register_response_start', 'bstr_free', 'htp_tx_res_process_body_data', 'htp_config_register_response_line', 'htp_config_set_tx_auto_destroy', 'htp_config_register_request_complete', 'bstr_to_lowercase', 'htp_tx_state_request_complete', 'htp_config_register_response_complete', 'bstr_alloc', 'bstr_index_of_nocase', 'bstr_rchr', 'htp_base64_decode_bstr', 'bstr_util_mem_index_of_mem_nocase', 'bstr_index_of_mem_nocase', 'bstr_dup', 'bstr_adjust_realptr', 'bstr_util_cmp_mem_nocasenorzero', 'htp_config_register_transaction_complete', 'htp_hook_destroy', 'bstr_begins_with_c_nocase', 'bstr_builder_size', 'bstr_index_of_c_nocase', 'htp_mpartp_finalize', 'bstr_begins_with_mem_nocase', 'bstr_add', 'htp_hook_create', 'bstr_cmp_c', 'htp_table_size', 'htp_mpartp_find_boundary', 'bstr_util_strdup_to_c', 'bstr_index_of_c_nocasenorzero', 'htp_list_array_release', 'htp_config_set_request_decompression', 'htp_hook_copy', 'htp_connp_create', 'htp_config_set_utf8_convert_bestfit', 'htp_list_array_get', 'bstr_begins_with', 'htp_config_set_response_decompression_layer_limit', 'bstr_util_mem_index_of_mem', 'htp_config_register_response_trailer_data', 'bstr_builder_clear', 'htp_config_register_urlencoded_parser', 'htp_tx_set_config', 'bstr_cmp_mem_nocase', 'htp_config_set_url_encoding_invalid_unwanted', 'htp_mpartp_parse', 'bstr_add_c_noex', 'htp_list_array_pop', 'htp_config_set_compression_bomb_limit', 'htp_config_create', 'htp_config_set_plusspace_decode', 'htp_config_copy', 'htp_get_version', 'htp_config_set_backslash_convert_slashes', 'htp_config_register_log', 'htp_hook_run_one', 'htp_config_set_compression_time_limit', 'htp_table_clear', 'htp_config_register_request_file_data', 'htp_config_register_request_body_data', 'htp_list_array_init', 'htp_config_set_bestfit_replacement_byte', 'htp_config_register_response_headers', 'bstr_begins_with_c', 'bstr_chr', 'bstr_add_noex', 'htp_config_register_request_uri_normalize', 'htp_config_set_field_limits', 'htp_config_set_parse_request_auth', 'htp_uri_free', 'bstr_adjust_len', 'bstr_cmp_c_nocase', 'htp_config_set_lzma_memlimit', 'htp_urldecode_inplace', 'htp_list_array_create', 'htp_uri_alloc', 'htp_config_set_log_level', 'bstr_expand', 'htp_table_create', 'htp_table_get_c', 'bstr_char_at_end', 'htp_table_get_index', 'htp_list_array_destroy', 'bstr_util_mem_index_of_c_nocase', 'htp_list_array_replace', 'htp_config_set_nul_encoded_terminates', 'bstr_util_cmp_mem_nocase', 'htp_config_set_url_encoding_invalid_handling', 'htp_config_set_allow_space_uri', 'htp_config_register_request_start', 'htp_config_register_request_trailer', 'bstr_dup_c', 'htp_hook_register', 'bstr_builder_appendn', 'bstr_index_of_mem', 'htp_base64_decoder_init', 'htp_list_array_size', 'bstr_add_mem', 'htp_urldecode_inplace_ex', 'htp_config_set_requestline_leading_whitespace_unwanted', 'htp_config_register_response_header_data', 'bstr_cmp', 'bstr_dup_ex', 'bstr_builder_append_c', 'htp_table_destroy', 'bstr_wrap_mem', 'bstr_util_mem_to_pint', 'htp_config_set_path_separators_compress', 'htp_config_set_nul_raw_unwanted', 'bstr_add_mem_noex', 'bstr_builder_create', 'bstr_util_mem_trim', 'htp_config_set_tmpdir', 'htp_table_destroy_ex', 'htp_config_set_lzma_layers', 'htp_config_set_utf8_invalid_unwanted', 'htp_config_set_u_encoding_decode', 'htp_config_set_nul_raw_terminates', 'htp_config_destroy', 'bstr_util_cmp_mem', 'htp_config_register_request_headers', 'bstr_cmp_nocase', 'bstr_util_memdup_to_c', 'bstr_util_mem_index_of_mem_nocasenorzero', 'htp_base64_decode', 'bstr_cmp_mem', 'htp_table_addk'}
pthreadpool: {'pthreadpool_parallelize_2d_tile_2d_with_uarch', 'pthreadpool_compute_4d_tiled', 'pthreadpool_get_threads_count', 'pthreadpool_parallelize_4d_tile_1d', 'pthreadpool_parallelize_3d', 'pthreadpool_parallelize_2d_tile_2d', 'pthreadpool_parallelize_5d', 'pthreadpool_parallelize_3d_tile_2d', 'pthreadpool_compute_1d', 'pthreadpool_parallelize_6d', 'pthreadpool_compute_2d', 'pthreadpool_parallelize_5d_tile_2d', 'pthreadpool_parallelize_1d_tile_1d', 'pthreadpool_compute_3d_tiled', 'pthreadpool_parallelize_4d_tile_2d', 'pthreadpool_parallelize_1d', 'pthreadpool_parallelize_3d_tile_1d', 'pthreadpool_parallelize_4d', 'pthreadpool_create', 'pthreadpool_parallelize_4d_tile_2d_with_uarch', 'pthreadpool_parallelize_3d_tile_2d_with_uarch', 'pthreadpool_parallelize_1d_with_uarch', 'pthreadpool_parallelize_2d_tile_1d', 'pthreadpool_parallelize_5d_tile_1d', 'pthreadpool_parallelize_6d_tile_1d', 'pthreadpool_destroy', 'pthreadpool_parallelize_2d', 'pthreadpool_parallelize_6d_tile_2d', 'pthreadpool_compute_2d_tiled', 'pthreadpool_compute_1d_tiled'}
minijail: {'minijail_kill', 'minijail_remount_proc_readonly', 'minijail_namespace_pids_rw_proc', 'minijail_run_fd_env_pid_pipes', 'minijail_wait', 'minijail_namespace_uts', 'minijail_add_fs_restriction_rx', 'minijail_create_session', 'minijail_namespace_vfs', 'minijail_mount', 'minijail_reset_signal_mask', 'minijail_set_supplementary_gids', 'minijail_add_fs_restriction_rw', 'minijail_run_pid_pipes_no_preload', 'minijail_keep_supplementary_gids', 'minijail_uidmap', 'minijail_run_env_pid_pipes', 'minijail_use_seccomp', 'minijail_use_alt_syscall', 'minijail_enter_pivot_root', 'minijail_destroy', 'minijail_set_enable_default_runtime', 'minijail_namespace_net_loopback', 'minijail_namespace_enter_vfs', 'minijail_mount_with_data', 'minijail_run', 'minijail_log_seccomp_filter_failures', 'minijail_parse_seccomp_filters_from_fd', 'minijail_change_gid', 'minijail_set_using_minimalistic_mountns', 'minijail_get_original_path', 'minijail_new', 'minijail_set_ambient_caps', 'minijail_reset_signal_handlers', 'minijail_add_fs_restriction_access_rights', 'minijail_add_remount', 'minijail_enter', 'minijail_add_minimalistic_mountns_fs_rules', 'minijail_preserve_fd', 'minijail_run_env_pid_pipes_no_preload', 'minijail_add_fs_restriction_edit', 'minijail_namespace_user_disable_setgroups', 'minijail_set_enable_new_sessions', 'minijail_capbset_drop', 'minijail_use_caps', 'minijail_skip_remount_private', 'minijail_skip_setting_securebits', 'minijail_change_uid', 'minijail_rlimit', 'minijail_mount_tmp', 'minijail_namespace_net', 'minijail_namespace_set_hostname', 'minijail_set_seccomp_filter_allow_speculation', 'minijail_new_session_keyring', 'minijail_add_hook', 'minijail_set_enable_profile_fs_restrictions', 'minijail_gidmap', 'minijail_inherit_usergroups', 'minijail_use_seccomp_filter', 'minijail_bind', 'minijail_copy_jail', 'minijail_remount_mode', 'minijail_add_to_cgroup', 'minijail_run_as_init', 'minijail_set_seccomp_filter_tsync', 'minijail_namespace_enter_net', 'minijail_write_pid_file', 'minijail_namespace_user', 'minijail_namespace_pids', 'minijail_set_preload_path', 'minijail_run_pid_pipes', 'minijail_is_fs_restriction_ruleset_initialized', 'minijail_run_pid', 'minijail_close_open_fds', 'minijail_mount_tmp_size', 'minijail_run_env', 'minijail_run_pipe', 'minijail_enable_default_fs_restrictions', 'minijail_no_new_privs', 'minijail_log_to_fd', 'minijail_parse_seccomp_filters', 'minijail_namespace_ipc', 'minijail_forward_signals', 'minijail_enter_chroot', 'minijail_namespace_cgroups', 'minijail_fork', 'minijail_disable_fs_restrictions', 'minijail_add_fs_restriction_ro', 'minijail_change_group', 'minijail_add_fs_restriction_advanced_rw', 'minijail_is_fs_restriction_available', 'minijail_mount_dev', 'minijail_syscall_name', 'minijail_run_no_preload', 'minijail_change_user', 'minijail_get_enable_default_runtime'}
cpu_features: {'FillX86BrandString', 'GetX86MicroarchitectureName', 'GetX86Microarchitecture', 'GetX86FeaturesEnumName', 'GetX86Info', 'GetX86FeaturesEnumValue', 'GetX86CacheInfo'}
cjson: {'cJSON_IsString', 'cJSON_ReplaceItemInArray', 'cJSON_IsObject', 'cJSON_AddItemReferenceToArray', 'cJSON_AddNumberToObject', 'cJSON_DeleteItemFromObject', 'cJSON_CreateStringArray', 'cJSON_AddItemToObject', 'cJSON_CreateBool', 'cJSON_IsTrue', 'cJSON_CreateArray', 'cJSON_CreateIntArray', 'cJSON_AddFalseToObject', 'cJSON_CreateFalse', 'cJSON_CreateRaw', 'cJSON_CreateFloatArray', 'cJSON_IsNumber', 'cJSON_GetArraySize', 'cJSON_PrintBuffered', 'cJSON_SetValuestring', 'cJSON_CreateObjectReference', 'cJSON_AddArrayToObject', 'cJSON_AddRawToObject', 'cJSON_ParseWithOpts', 'cJSON_PrintPreallocated', 'cJSON_IsFalse', 'cJSON_Compare', 'cJSON_ParseWithLength', 'cJSON_Print', 'cJSON_IsBool', 'cJSON_DeleteItemFromArray', 'cJSON_ReplaceItemInObjectCaseSensitive', 'cJSON_GetArrayItem', 'cJSON_Parse', 'cJSON_AddItemReferenceToObject', 'cJSON_CreateNull', 'cJSON_DetachItemFromObjectCaseSensitive', 'cJSON_CreateNumber', 'cJSON_CreateString', 'cJSON_IsInvalid', 'cJSON_AddNullToObject', 'cJSON_AddStringToObject', 'cJSON_DetachItemViaPointer', 'cJSON_CreateObject', 'cJSON_GetObjectItemCaseSensitive', 'cJSON_GetNumberValue', 'cJSON_Version', 'cJSON_Minify', 'cJSON_GetObjectItem', 'cJSON_AddItemToArray', 'cJSON_AddObjectToObject', 'cJSON_IsRaw', 'cJSON_ReplaceItemInObject', 'cJSON_malloc', 'cJSON_ReplaceItemViaPointer', 'cJSON_Delete', 'cJSON_SetNumberHelper', 'cJSON_CreateStringReference', 'cJSON_free', 'cJSON_IsArray', 'cJSON_IsNull', 'cJSON_HasObjectItem', 'cJSON_Duplicate', 'cJSON_CreateTrue', 'cJSON_DetachItemFromObject', 'cJSON_DeleteItemFromObjectCaseSensitive', 'cJSON_InsertItemInArray', 'cJSON_AddBoolToObject', 'cJSON_GetStringValue', 'cJSON_PrintUnformatted', 'cJSON_GetErrorPtr', 'cJSON_AddItemToObjectCS', 'cJSON_AddTrueToObject', 'cJSON_DetachItemFromArray', 'cJSON_ParseWithLengthOpts', 'cJSON_CreateDoubleArray', 'cJSON_CreateArrayReference'}
zlib: {'get_crc_table', 'inflateBackInit_', 'gzputs', 'deflateReset', 'inflateGetHeader', 'gzbuffer', 'gzclearerr', 'inflateEnd', 'gzseek64', 'gzrewind', 'deflatePending', 'deflateCopy', 'crc32', 'gzflush', 'deflateTune', 'inflateSyncPoint', 'uncompress', 'deflateBound', 'gzseek', 'inflateUndermine', 'gzvprintf', 'uncompress2', 'inflatePrime', 'inflateBackEnd', 'inflateBack', 'gzgetc_', 'adler32_combine', 'gzclose_r', 'gzfread', 'compressBound', 'deflatePrime', 'deflateSetDictionary', 'inflateResetKeep', 'gzoffset64', 'deflateEnd', 'gztell', 'gzwrite', 'gzclose_w', 'deflateGetDictionary', 'crc32_combine_op', 'gzopen64', 'gzdopen', 'deflateParams', 'gzeof', 'gzdirect', 'deflateSetHeader', 'zlibCompileFlags', 'gzsetparams', 'zError', 'gzread', 'inflateSync', 'inflateReset', 'adler32_z', 'crc32_combine', 'gzoffset', 'inflateReset2', 'inflateMark', 'gzerror', 'gzputc', 'adler32', 'gzgets', 'gztell64', 'inflateGetDictionary', 'gzungetc', 'inflateCopy', 'deflate', 'inflateInit2_', 'crc32_combine_gen64', 'gzprintf', 'gzclose', 'inflateSetDictionary', 'crc32_z', 'inflateValidate', 'zlibVersion', 'crc32_combine_gen', 'inflate', 'inflateCodesUsed', 'deflateResetKeep', 'deflateInit2_', 'inflateInit_', 'gzgetc', 'gzfwrite', 'gzopen', 'compress', 'crc32_combine64', 'adler32_combine64', 'deflateInit_', 'compress2'}
c-ares: {'ares_library_initialized', 'ares_dns_opt_get_name', 'ares_parse_uri_reply', 'ares_mkquery', 'ares_parse_soa_reply', 'ares_expand_name', 'ares_parse_caa_reply', 'ares_dns_rr_get_keys', 'ares_free_data', 'ares_parse_a_reply', 'ares_dns_rr_key_to_rec_type', 'ares_parse_txt_reply', 'ares_parse_aaaa_reply', 'ares_dns_parse', 'ares_dns_rr_key_datatype', 'ares_dns_rec_type_fromstr', 'ares_parse_srv_reply', 'ares_parse_mx_reply', 'ares_parse_txt_reply_ext', 'ares_dns_opcode_tostr', 'ares_dns_addr_to_ptr', 'ares_dns_section_tostr', 'ares_dns_pton', 'ares_dns_rcode_tostr', 'ares_parse_naptr_reply', 'ares_dns_rr_key_tostr', 'ares_init_options', 'ares_library_cleanup', 'ares_strerror', 'ares_expand_string', 'ares_create_query', 'ares_dns_class_tostr', 'ares_dns_opt_get_datatype', 'ares_dns_class_fromstr', 'ares_inet_pton', 'ares_dns_record_create', 'ares_dns_rec_type_tostr', 'ares_init', 'ares_version', 'ares_free_string', 'ares_parse_ptr_reply', 'ares_parse_ns_reply', 'ares_destroy_options', 'ares_library_init_mem', 'ares_inet_ntop', 'ares_library_init', 'ares_threadsafety'}
libpcap: {'pcap_get_selectable_fd', 'pcap_set_timeout', 'pcap_is_swapped', 'pcap_list_tstamp_types', 'pcap_findalldevs', 'pcap_datalink_name_to_val', 'pcap_open_live', 'pcap_set_tstamp_type', 'pcap_tstamp_type_val_to_name', 'pcap_setnonblock', 'pcap_dump_open_append', 'pcap_next_ex', 'pcap_set_promisc', 'pcap_breakloop', 'pcap_datalink_ext', 'pcap_open_offline_with_tstamp_precision', 'pcap_activate', 'pcap_set_buffer_size', 'pcap_lib_version', 'pcap_perror', 'pcap_compile_nopcap', 'bpf_dump', 'pcap_get_required_select_timeout', 'pcap_get_tstamp_precision', 'pcap_setsampling', 'pcap_lookupdev', 'pcap_getnonblock', 'pcap_fileno', 'pcap_set_tstamp_precision', 'pcap_set_rfmon', 'bpf_image', 'pcap_setfilter', 'pcap_set_datalink', 'pcap_bufsize', 'pcap_open_dead', 'pcap_datalink', 'pcap_dump_file', 'pcap_freecode', 'pcap_datalink_val_to_description', 'pcap_dump_open', 'pcap_compile', 'pcap_lookupnet', 'pcap_stats', 'pcap_minor_version', 'pcap_geterr', 'pcap_statustostr', 'pcap_list_datalinks', 'bpf_filter', 'pcap_dump_flush', 'pcap_inject', 'pcap_dump_close', 'pcap_setdirection', 'pcap_createsrcstr', 'pcap_next', 'pcap_set_protocol_linux', 'pcap_close', 'pcap_file', 'pcap_init', 'pcap_tstamp_type_name_to_val', 'pcap_datalink_val_to_name', 'pcap_parsesrcstr', 'pcap_dump_ftell64', 'pcap_set_immediate_mode', 'pcap_tstamp_type_val_to_description', 'pcap_open_offline', 'pcap_can_set_rfmon', 'pcap_strerror', 'pcap_dump_ftell', 'pcap_datalink_val_to_description_or_dlt', 'pcap_findalldevs_ex', 'pcap_create', 'pcap_open', 'pcap_major_version', 'pcap_open_dead_with_tstamp_precision', 'pcap_snapshot', 'pcap_set_snaplen', 'bpf_validate'}
libtiff: {'TIFFSetupStrips', 'TIFFFdOpen', 'TIFFSetWriteOffset', 'TIFFIsBigEndian', 'TIFFFileno', 'TIFFReadFromUserBuffer', 'TIFFRegisterCODEC', 'TIFFVStripSize', 'TIFFDeferStrileArrayWriting', 'TIFFUnlinkDirectory', 'TIFFDefaultStripSize', 'XYZtoRGB24', 'TIFFGetCloseProc', 'TIFFCreateGPSDirectory', '_TIFFmemcpy', 'TIFFCleanup', 'TIFFReadTile', 'TIFFGetFieldDefaulted', 'TIFFWriteCheck', 'TIFFFindField', 'TIFFSwabArrayOfLong', 'TIFFSetClientInfo', 'TIFFTileSize64', 'TIFFReadDirectory', 'TIFFComputeTile', 'TIFFGetTagListEntry', 'TIFFCurrentRow', 'TIFFCreateDirectory', 'TIFFSetWarningHandler', 'TIFFReadGPSDirectory', 'LogLuv32fromXYZ', '_TIFFcalloc', 'TIFFReverseBits', 'TIFFIsByteSwapped', 'TIFFFindCODEC', 'TIFFReadRawTile', '_TIFFmemset', 'TIFFReadEXIFDirectory', 'TIFFScanlineSize64', 'TIFFCurrentTile', 'TIFFGetClientInfo', 'TIFFNumberOfTiles', 'TIFFSetMode', 'TIFFSetErrorHandler', 'TIFFNumberOfStrips', 'TIFFWriteEncodedStrip', 'TIFFClose', 'TIFFIsCODECConfigured', 'TIFFRewriteDirectory', 'TIFFOpenExt', 'TIFFReadRGBATile', 'TIFFFieldWithName', 'TIFFReadRawStrip', 'LogL16toY', 'TIFFForceStrileArrayWriting', 'TIFFMergeFieldInfo', 'LogLuv32toXYZ', 'TIFFVStripSize64', 'TIFFVTileSize64', 'TIFFSetField', 'TIFFCurrentStrip', 'TIFFReadRGBAStrip', 'TIFFTileRowSize64', 'TIFFCurrentDirOffset', 'TIFFReadRGBAImageOriented', 'TIFFOpenOptionsSetMaxSingleMemAlloc', 'TIFFDataWidth', 'TIFFSwabArrayOfFloat', 'TIFFSwabArrayOfShort', 'TIFFOpenOptionsAlloc', 'TIFFSwabDouble', 'TIFFCheckTile', 'TIFFSetFileno', '_TIFFrealloc', 'TIFFOpenOptionsSetMaxCumulatedMemAlloc', 'TIFFYCbCrtoRGB', 'TIFFUnsetField', 'TIFFWriteRawTile', 'TIFFReadEncodedTile', 'TIFFCheckpointDirectory', 'TIFFComputeStrip', 'TIFFVTileSize', 'TIFFGetUnmapFileProc', 'LogLuv24toXYZ', 'TIFFIsUpSampled', 'TIFFSwabArrayOfDouble', 'TIFFClientdata', 'TIFFWriteDirectory', 'LogL10fromY', 'TIFFRawStripSize64', '_TIFFmalloc', 'TIFFVGetFieldDefaulted', 'TIFFFlushData', 'TIFFWriteScanline', 'TIFFGetConfiguredCODECs', 'LogL16fromY', 'TIFFGetVersion', 'TIFFGetMode', 'TIFFErrorExt', 'uv_encode', 'TIFFWarningExt', 'TIFFGetStrileOffsetWithErr', 'TIFFSwabLong', 'TIFFSwabArrayOfTriples', 'TIFFSetFileName', 'TIFFUnRegisterCODEC', 'TIFFVSetField', 'TIFFGetStrileOffset', 'TIFFDefaultTileSize', 'TIFFCIELabToRGBInit', 'TIFFClientOpen', 'TIFFStripSize', 'TIFFSwabShort', 'TIFFSetSubDirectory', 'TIFFIsBigTIFF', 'TIFFSetDirectory', 'TIFFSwabFloat', 'TIFFRGBAImageGet', 'TIFFRawStripSize', 'TIFFGetTagListCount', 'TIFFClientOpenExt', 'TIFFGetReadProc', 'TIFFErrorExtR', 'TIFFWriteTile', 'TIFFAccessTagMethods', 'TIFFReadScanline', 'TIFFFreeDirectory', 'TIFFSwabLong8', 'TIFFError', 'TIFFOpenOptionsSetErrorHandlerExtR', 'TIFFVGetField', 'uv_decode', 'TIFFSetTagExtender', 'TIFFCurrentDirectory', 'TIFFFlush', 'TIFFWriteCustomDirectory', 'TIFFWriteEncodedTile', 'TIFFSetWarningHandlerExt', 'TIFFNumberOfDirectories', 'TIFFGetField', 'TIFFFileName', 'TIFFXYZToRGB', 'TIFFFieldWithTag', 'TIFFCreateEXIFDirectory', 'TIFFOpenOptionsFree', 'TIFFRasterScanlineSize64', 'TIFFTileSize', 'TIFFReadRGBATileExt', 'TIFFScanlineSize', 'TIFFGetMapFileProc', '_TIFFmemcmp', 'TIFFWarning', 'TIFFGetSeekProc', 'TIFFGetBitRevTable', 'TIFFSetErrorHandlerExt', 'TIFFFdOpenExt', 'TIFFLastDirectory', 'TIFFOpenOptionsSetWarningHandlerExtR', 'TIFFIsTiled', 'TIFFReadRGBAImage', 'LogLuv24fromXYZ', 'TIFFYCbCrToRGBInit', 'TIFFTileRowSize', 'TIFFRGBAImageOK', 'TIFFRGBAImageBegin', 'TIFFReadBufferSetup', 'TIFFPrintDirectory', 'TIFFRasterScanlineSize', 'TIFFWarningExtR', 'TIFFStripSize64', 'TIFFSwabArrayOfLong8', '_TIFFfree', 'TIFFOpen', 'TIFFWriteRawStrip', 'TIFFReadRGBAStripExt', 'LogL10toY', 'TIFFGetStrileByteCount', 'TIFFWriteBufferSetup', 'TIFFReadEncodedStrip', 'TIFFGetSizeProc', 'TIFFIsMSB2LSB', 'TIFFGetStrileByteCountWithErr', 'TIFFCIELabToXYZ', 'TIFFSetClientdata', 'TIFFGetWriteProc'}
libvpx: {'vpx_codec_set_cx_data_buf', 'vpx_codec_version_extra_str', 'vpx_codec_control_', 'vpx_img_flip', 'vpx_codec_error', 'vpx_codec_build_config', 'vpx_codec_dec_init_ver', 'vpx_img_wrap', 'vpx_codec_enc_config_set', 'vpx_codec_decode', 'vpx_img_set_rect', 'vpx_codec_get_global_headers', 'vpx_codec_encode', 'vpx_img_free', 'vpx_codec_register_put_frame_cb', 'vpx_codec_vp8_dx', 'vpx_codec_get_stream_info', 'vpx_codec_err_to_string', 'vpx_codec_error_detail', 'vpx_codec_version_str', 'vpx_codec_register_put_slice_cb', 'vpx_codec_enc_config_default', 'vpx_codec_destroy', 'vpx_codec_peek_stream_info', 'vpx_codec_vp9_dx', 'vpx_codec_get_frame', 'vpx_codec_iface_name', 'vpx_codec_enc_init_multi_ver', 'vpx_img_alloc', 'vpx_codec_enc_init_ver', 'vpx_codec_set_frame_buffer_functions', 'vpx_codec_get_cx_data', 'vpx_codec_version', 'vpx_codec_get_caps', 'vpx_codec_get_preview_frame'}
libaom: {'aom_uleb_size_in_bytes', 'aom_codec_control', 'aom_codec_set_frame_buffer_functions', 'aom_codec_version_extra_str', 'aom_codec_get_cx_data', 'aom_obu_type_to_string', 'aom_codec_dec_init_ver', 'aom_codec_iface_name', 'aom_codec_build_config', 'aom_img_wrap', 'aom_codec_enc_config_default', 'aom_codec_version', 'aom_codec_decode', 'aom_codec_get_caps', 'aom_img_metadata_alloc', 'aom_img_alloc_with_border', 'aom_codec_enc_config_set', 'aom_codec_destroy', 'aom_codec_enc_init_ver', 'aom_uleb_encode', 'aom_codec_av1_dx', 'aom_img_plane_height', 'aom_img_metadata_free', 'aom_img_flip', 'aom_img_free', 'aom_img_get_metadata', 'aom_codec_error', 'aom_codec_encode', 'aom_codec_get_stream_info', 'aom_codec_get_frame', 'aom_codec_set_option', 'aom_img_set_rect', 'aom_codec_get_global_headers', 'aom_img_plane_width', 'aom_codec_version_str', 'aom_img_num_metadata', 'aom_codec_set_cx_data_buf', 'aom_codec_get_preview_frame', 'aom_img_add_metadata', 'aom_codec_error_detail', 'aom_codec_err_to_string', 'aom_img_remove_metadata', 'aom_img_alloc', 'aom_uleb_decode', 'aom_codec_av1_cx', 'aom_uleb_encode_fixed_size', 'aom_codec_peek_stream_info'}
